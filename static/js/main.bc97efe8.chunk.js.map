{"version":3,"sources":["appContext.js","components/login/index.js","components/dashboard/index.js","components/header/index.js","components/navBar/index.js","httpClient.js","components/userType/index.js","components/auth/privateRoute/index.js","customStatus/index.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","isLoggedIn","Login","setUser","useContext","Card","style","width","height","className","Img","variant","src","Header","Body","Title","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","autoFocus","type","placeholder","Button","onClick","localStorage","setItem","Dashboard","alt","NavBar","ListGroup","Item","to","httpClient","axios","create","baseURL","UserType","useState","userTypeList","setUserTypeList","userType","isActive","userTypeForm","setUserTypeForm","useEffect","getUserTypes","handleInputChange","event","userForm","target","id","value","get","then","response","data","dtTable","Container","onChange","Check","defaultChecked","payload","Status","post","res","console","log","Table","bordered","size","backgroundColor","map","userTypeObj","UserTypeID","PrivateRoute","children","rest","user","render","location","pathname","state","from","useAuth","getItem","App","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc97efe8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const AppContext = React.createContext({ isLoggedIn: false });","\r\nimport './index.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { useContext } from 'react';\r\nimport { AppContext } from '../../appContext';\r\n\r\nconst Login = () => {\r\n\r\n    const { setUser } = useContext(AppContext);\r\n    const handleLogin = () => {\r\n        localStorage.setItem('isLoggedIn', true);\r\n        setUser({ isLoggedIn: true });\r\n    }\r\n\r\n    return (\r\n        <Card style={{ width: '390px', height: 'auto' }} className=\"m-auto\">\r\n            <Card.Img style={{ height: '56px' }} variant=\"top\" src=\"./tss-logo.png\" />\r\n            <Card.Header className=\"text-center\">LENDING BOOKS REQUEST APPROVAL</Card.Header>\r\n            <Card.Body>\r\n                <Card.Title className=\"text-center\">LOGIN</Card.Title>\r\n\r\n                <Form>\r\n                    <Form.Group as={Row} controlId=\"username\">\r\n                        <Form.Label column sm={4} className=\"mandatory\">\r\n                            Username\r\n                        </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Control autoFocus={true} type=\"text\" placeholder=\"Username\" />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"password\">\r\n                        <Form.Label column sm={4} className=\"mandatory\">\r\n                            Password\r\n                        </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Col className=\"text-center\">\r\n                        <Button variant=\"primary\" onClick={handleLogin}>Submit</Button>\r\n                    </Col>\r\n                    <Col className=\"mt-4\">\r\n                        <Button variant=\"link\">Forgot Password?</Button>\r\n                        <Button variant=\"link\">Change Password?</Button>\r\n                    </Col>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Login;","\r\nconst Dashboard = ()=>{\r\n\r\n    return(\r\n        <div className=\"app-page\">\r\n            \r\n            <div>Content</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","\r\nimport './index.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport { AppContext } from '../../appContext';\r\nimport { useContext } from 'react';\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const { setUser } = useContext(AppContext);\r\n\r\n    const handleLogout = () => {\r\n        localStorage.setItem('isLoggedIn', false);\r\n        setUser({ isLoggedIn: false });\r\n    }\r\n\r\n    return (\r\n        <div className=\"app-header\">\r\n            <header>\r\n                <img className=\"app-logo\" src=\"./tss-logo.png\" alt=\"logo\" />\r\n                <h5>LENDING BOOKS REQUEST APPROVAL</h5>\r\n                <div>\r\n                    <Button variant=\"outline-light\" onClick={handleLogout}>Logout</Button>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className=\"nav-bar\">\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <Link to=\"/dashboard\">Dashboard</Link>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Link to=\"/userType\">User Type</Link>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Link to=\"/userMaster\">User Master</Link>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Link to=\"/booksMaster\">Books Master</Link>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Link to=\"/author\">Author</Link>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar;","\r\nimport axios from 'axios';\r\n\r\nconst httpClient = axios.create({\r\n    baseURL: 'http://localhost:8080/LibraryAPI/api/Library'\r\n})\r\n\r\nexport default httpClient;","import Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { useEffect, useState } from 'react';\r\nimport httpClient from '../../httpClient';\r\n\r\nconst UserType = () => {\r\n\r\n    const [userTypeList, setUserTypeList] = useState([]);\r\n    const [userTypeForm, setUserTypeForm] = useState({ userType: '', isActive: true });\r\n\r\n    useEffect(() => {\r\n        getUserTypes();\r\n        // This is mock data.\r\n        setUserTypeList([{ \"UserTypeID\": 4, \"UserType\": \"Test\", \"Status\": \"N \", \"CreatedBy\": 1, \"CreatedDate\": \"2019-03-10T18:40:13.787\", \"LastModifiedBy\": 1, \"LastModifiedDate\": \"2019-03-10T18:43:37.707\" }, { \"UserTypeID\": 3, \"UserType\": \"LIBRARIAN\", \"Status\": \"Y \", \"CreatedBy\": 1, \"CreatedDate\": \"2019-02-23T08:07:12.37\", \"LastModifiedBy\": null, \"LastModifiedDate\": null }, { \"UserTypeID\": 2, \"UserType\": \"STUDENT\", \"Status\": \"Y \", \"CreatedBy\": 1, \"CreatedDate\": \"2018-10-07T18:35:45.727\", \"LastModifiedBy\": null, \"LastModifiedDate\": null }, { \"UserTypeID\": 1, \"UserType\": \"ADMIN\", \"Status\": \"Y \", \"CreatedBy\": null, \"CreatedDate\": \"2018-10-07T18:30:07.21\", \"LastModifiedBy\": null, \"LastModifiedDate\": null }]);\r\n    }, [])\r\n\r\n    const submitUserType = () => {\r\n\r\n        const payload = {\r\n            UserType: userTypeForm.userType,\r\n            Status: userTypeForm.isActive\r\n        }\r\n\r\n        httpClient.post('/userType', {\r\n            ...payload\r\n        }).then((res) => {\r\n            console.log(res);\r\n            getUserTypes();\r\n        });\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        let userForm = { ...userTypeForm };\r\n        if (event.target.id === 'userType') {\r\n            userForm.userType = event.target.value;\r\n        } else {\r\n            userForm.isActive = !userForm.isActive\r\n        }\r\n        setUserTypeForm(userForm);\r\n    }\r\n\r\n    const getUserTypes = () => {\r\n\r\n        httpClient.get('/UserTypeBind').then((response) => {\r\n            if (response.data) {\r\n                setUserTypeList(response.data.dtTable);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"app-page\">\r\n            <h4 className=\"text-center m-3\">User Type</h4>\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col sm={8}>\r\n\r\n                        <Form>\r\n                            <Form.Group as={Row} controlId=\"userType\">\r\n                                <Form.Label column sm={3}>\r\n                                    User Type\r\n                                </Form.Label>\r\n                                <Col sm={7}>\r\n                                    <Form.Control type=\"text\" value={userTypeForm.userType} onChange={handleInputChange} placeholder=\"User type\" />\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"userActive\">\r\n                                <Form.Label column sm={3}>\r\n                                    Active Status\r\n                                </Form.Label>\r\n                                <Col sm={7}>\r\n                                    <Form.Check defaultChecked={userTypeForm.isActive} value={userTypeForm.isActive} onChange={handleInputChange} />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Col sm={12} className=\"text-center\">\r\n                                <Button type=\"reset\" variant=\"secondary mr-4\">Clear</Button>\r\n                                <Button onClick={submitUserType} variant=\"primary\">Submit</Button>\r\n                            </Col>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={12}>\r\n                        <Table bordered className=\"mt-4\" size=\"sm\">\r\n                            <thead style={{ backgroundColor: '#e0e0e0' }}>\r\n                                <tr>\r\n                                    <th>User Type</th>\r\n                                    <th>Status</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    userTypeList.map((userTypeObj) => {\r\n                                        return (\r\n                                            <tr key={userTypeObj.UserTypeID}>\r\n                                                <td>{userTypeObj.UserType}</td>\r\n                                                <td>{userTypeObj.Status}</td>\r\n                                                <td>\r\n                                                    <Button variant=\"link\">Edit</Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserType;","import { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { AppContext } from '../../../appContext';\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const { user } = useContext(AppContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                user.isLoggedIn ? (children) : <Redirect to={{ pathname: '/login', state: { from: location } }} />\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;","import { useState } from \"react\";\r\n\r\nconst useAuth = () => {\r\n    let user = localStorage.getItem('isLoggedIn');\r\n    user = (user === 'true') ? true : false;\r\n\r\n    const [isLoggedIn] = useState(user);\r\n    return isLoggedIn;\r\n}\r\n\r\nexport default useAuth;","import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Login from './components/login';\r\n\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Dashboard from './components/dashboard';\r\nimport Header from './components/header';\r\nimport NavBar from './components/navBar';\r\nimport UserType from './components/userType';\r\nimport PrivateRoute from './components/auth/privateRoute';\r\nimport useAuth from './customStatus';\r\nimport { useState } from 'react';\r\n\r\nimport { AppContext } from './appContext';\r\n\r\nfunction App() {\r\n\r\n  const isLoggedIn = useAuth();\r\n  const [user, setUser] = useState({ isLoggedIn });\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <AppContext.Provider value={{ user, setUser }}>\r\n\r\n        {user.isLoggedIn && <Header />}\r\n\r\n        <div className=\"app-content\">\r\n          <Router>\r\n\r\n            {user.isLoggedIn && <NavBar />}\r\n\r\n            <Switch>\r\n\r\n              <Route exact path=\"/login\" render={({ location }) =>\r\n                user.isLoggedIn ? <Redirect to={{ pathname: '/dashboard', state: { from: location } }} /> : <Login />\r\n              } />\r\n\r\n              <PrivateRoute path=\"/dashboard\">\r\n                <Dashboard />\r\n              </PrivateRoute>\r\n\r\n              <PrivateRoute path=\"/userType\">\r\n                <UserType />\r\n              </PrivateRoute>\r\n\r\n              <Route path=\"*\">\r\n                <Redirect to=\"/dashboard\" />\r\n              </Route>\r\n\r\n            </Switch>\r\n\r\n          </Router>\r\n        </div>\r\n\r\n      </AppContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}